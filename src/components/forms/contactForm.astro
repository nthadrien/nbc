---
import { getLangFromUrl, useTranslations } from "../../i18n/utils"

const locale = getLangFromUrl(Astro.url);
const t = useTranslations(locale);


const address = [
    { icon: "bi bi-telephone-fill", to:"+237 667 316 329"},
    { icon: "bi bi-google", to:"ntibusinessconsulting@gmail.com"},
]

---

<!-- Modal -->
<aside class="modal fade p-3" data-bs-backdrop="static" id="contactUs" tabindex="-1" aria-labelledby="contactUsLabel" aria-hidden="true">

    <div class="modal-dialog modal-dialog-centered">

      <div class="modal-content">

        <div class="modal-header border-0 py-1">
          <h1 class="modal-title fs-5" id="exampleModalLabel">{t('talk')}</h1>
          <button id="btn-f-close" type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        
        <form id="contact" class="modal-body pt-1">

          <h2 class="display-5 fw-bold">{t('nav.contact')}</h2>
          <p>{t('slogan')}</p>
          
          {address.map( addr => <a class="d-block" target="_blank"> 
            <i class={`me-1 text-primary ${addr.icon}`} /> {addr.to}
          </a>)}
          <p>
            <i class="bi bi-alarm-fill me-1 text-primary" />
            {t('contact.hr')}
          </p>

          <input placeholder="Nom / Prenom" type="text" class="form-control mb-3" name="name" required />
          <input placeholder="Email / Tel" type="text" class="form-control mb-3" name="mail" required />
          <textarea placeholder="Message" class="form-control mb-3" name="message" required></textarea>
          
          <button class="btn btn-primary" type="submit">Send</button>

        </form>

      </div>
    </div>
</aside>

<script>

  document.getElementById("contact")?.addEventListener("submit", async (ev: SubmitEvent) => {
    ev.preventDefault();
    const formData = new FormData(ev.target as HTMLFormElement);
    const dataObj = Object.fromEntries(formData.entries());
    let text = `message: de .\n`;

    for( let x in dataObj ) {
        text += `${x} : ${dataObj[x]} \n`;
    }

    const tg_tokens = {
      telegram_bot_token: "7882103524:AAFO-OU7A2mpdEDDXDXgU16-k9YuUIvvFrU",
      chat_id : "-1002544643338"
    }

    const resp = await fetch(
        // `https://api.telegram.org/bot${tg_tokens.telegram_bot_token}/sendMessage?chat_id=${tg_tokens.chat_id}&text=${encodeURI(text)}`,
        `https://api.telegram.org/bot${tg_tokens.telegram_bot_token}/sendMessage?chat_id=${tg_tokens.chat_id}&text=${encodeURI(text)}`,
        { method: "POST" },
    );

    if (resp.ok) {
        alert("Thanks / Merci ")
        const btn:HTMLButtonElement | null = document.querySelector("button[data-bs-target='#contactUs']");
        if ( btn ) btn.click();
    } else {
        alert("500 - sorry we are in maintenance try a different means. \n Oops essayez de nous contactez autrement svp.")
    }
  });
</script>