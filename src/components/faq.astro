<section id="faq" class="container-fluid d-flex flex-column gap-3 justify-content-center align-items-center py-5">

    <aside class="col-12 col-lg-8 col-xxl-7 text-center">
        <span class="text-info">F.A.Q</span>
        <h3 class="display-6 fw-bold">Frequently Asked Questions</h3>
        <p class="lead">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Soluta harum ipsum venenatis metus sem veniam eveniet aperiam suscipit.</p>
    </aside>

	<aside class="container row justify-content-center p-lg-3">

        <div class="col-md-3">
            <h4 class="mt-3 fw-semibold">Technical</h4>
        </div>

		<section class="col-md-9 accordion accordion-flush" id="Technical-accordion">

            {[1,2,3,4].map( item => <div class="accordion-item border-0 mb-3"> 
            
                <div class="accordion-item">
                    <h4 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target={"#panelsStayOpen-collapseOne"+item} aria-expanded="true" aria-controls={"panelsStayOpen-collapseOne"+item}>
                            <i class="bi bi-question-circle-fill me-3 text-primary"/>
                            Accordion Item #1
                        </button>
                    </h4>
                    <div id={"panelsStayOpen-collapseOne"+item} class="accordion-collapse collapse">
                    <div class="accordion-body">
                        <strong>This is the first item’s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It’s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                    </div>
                </div>
            
            </div>)}
		</section>
		

		<div class="col-md-3">
            <h4 class="mt-3 fw-semibold">Billing</h4>
        </div>

		<section class="col-md-9 accordion accordion-flush" id="Billing-accordion">

            {[12,22,32,42].map( item => <div class="accordion-item border-0 mb-3"> 
            
                <div class="accordion-item">
                    <h4>
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target={"#panelsStayOpen-collapseOne"+item} aria-expanded="true" aria-controls={"panelsStayOpen-collapseOne"+item}>
                            <i class="bi bi-question-circle-fill me-3 text-primary"/>
                            Accordion Item #1
                        </button>
                    </h4>
                    <div id={"panelsStayOpen-collapseOne"+item} class="accordion-collapse collapse">
                    <div class="accordion-body">
                        <strong>This is the first item’s accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It’s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                    </div>
                </div>
            
            </div>)}
		</section>

	</aside>
</section>